<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!--表明重用预编译的SQL语句 -->
	<settings>
		<setting name="defaultExecutorType" value="REUSE" />
		
		<!-- 启用延迟加载，所有关联对象都不会即时加载
			  启用延迟加载时需要加入cglib-3.1.jar和asm-4.2.jar -->
		<setting name="lazyLoadingEnabled" value="true" />
		<setting name="aggressiveLazyLoading" value="false" />
	</settings>

	<!--mybatis接口bean第一、二种定义方式使用此处；第三种定义方式不使用此处 -->
	<!--类型别名定义。今后可只用Student来代替它冗长的 全限定名 -->
	<!--
	<typeAliases>
		<!-
		<typeAlias alias="Student" type="org.bluesky.mybatis.entity.Student" />
		<typeAlias alias="Teacher" type="org.bluesky.mybatis.entity.Teacher" />
		->
		
		<!-  批量别名定义 
		          指定包名，mybatis自动扫描包中的entity类，自动定义别名，别名就是类名（首字母大写或小写都可以）
		          和spring整合后mybatis接口bean使用第三种定义方式mapper扫描器时，这里不需要配置了 ->
		<package name="org.bluesky.mybatis.entity"/>
	</typeAliases>
	-->
	
	<!-- mybatis接口bean第一、二种定义方式使用此处；第三种定义方式不使用此处 -->
	<!-- plugins在配置文件中的位置必须符合要求，否则会报错，顺序如下:
		 properties?, settings?, 
		 typeAliases?, typeHandlers?, 
		 objectFactory?,objectWrapperFactory?, 
		 plugins?, 
		 environments?, databaseIdProvider?, mappers? -->
	<!--
	<plugins>
		<!-  com.github.pagehelper为PageHelper类所在包名  ->
		<plugin interceptor="com.github.pagehelper.PageHelper">
			<!-  4.0.0以后版本可以不设置该参数  ->
			<property name="dialect" value="mysql" />
			<!-  该参数默认为false  ->
			<!-  设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用  ->
			<!-  和startPage中的pageNum效果一样  ->
			<property name="offsetAsPageNum" value="true" />
			<!-  该参数默认为false  ->
			<!-  设置为true时，使用RowBounds分页会进行count查询  ->
			<property name="rowBoundsWithCount" value="true" />
			<!-  设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果  ->
			<!-  （相当于没有执行分页查询，但是返回结果仍然是Page类型）  ->
			<property name="pageSizeZero" value="true" />
			<!-  3.3.0版本可用 - 分页参数合理化，默认false禁用  ->
			<!-  启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页  ->
			<!-  禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据  ->
			<property name="reasonable" value="false" />
			<!-  3.5.0版本可用 - 为了支持startPage(Object params)方法  ->
			<!-  增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值  ->
			<!-  可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值  ->
			<!-  不理解该含义的前提下，不要随便复制该配置  ->
			<property name="params" value="pageNum=pageHelperStart;pageSize=pageHelperRows;" />
			<!-  支持通过Mapper接口参数来传递分页参数  ->
			<property name="supportMethodsArguments" value="false" />
			<!-  always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page  ->
			<property name="returnPageInfo" value="none" />
		</plugin>
	</plugins>
	-->
	
	<!--mybatis接口bean第一、二种定义方式使用此处；第三种定义方式不使用此处 -->
	<!--指定要用到的mapper文件。以下的resource属性告诉 MyBatis要在类路径下的org/bluesky/mybatis/mapper目录下找StudentMapper.xml文件
		若映射器接口（如StudentDao.java接口）与相应的映射配置文件（如StudentMapper.xml）同名且在同一目录下，就无需在配置文件mybatis-configuration.xml中使用mappers元素来指定映射配置文件 -->
	<!--
	<mappers>
		<mapper resource="org/bluesky/mybatis/mapper/StudentMapper.xml" />
		<mapper resource="org/bluesky/mybatis/mapper/TeacherMapper.xml" />
		
		<!-  批量加载mapper
		          指定mapper接口的包名，mybatis自动扫描包下边所有mapper接口进行加载
		          遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录中
		          上边规范的前提是：使用的是mapper代理方法
		          和spring整合后mybatis接口bean使用第三种定义方式mapper扫描器时，这里不需要配置了 ->
		<!-
		<package name="org.bluesky.mybatis.mapper"/>
		->
	</mappers>
	-->
</configuration>